{"ast":null,"code":"/*eslint-disable*/\nimport image1 from \"../assets/image/plant1.png\";\nimport image2 from \"../assets/image/plant2.png\";\nconst dummyData = {\n  products: [{\n    id: 123,\n    name: \"斑葉姑婆芋\",\n    image: image1,\n    price: \"$2,580\",\n    priceNumber: 2580,\n    amount: 1\n  }, {\n    id: 126,\n    name: \"凹突觀音蓮\",\n    image: image2,\n    price: \"$1,200\",\n    priceNumber: 1200,\n    amount: 1\n  }]\n};\nexport default {\n  props: {\n    deliveryFee: {\n      type: Number,\n      required: true\n    }\n  },\n\n  data() {\n    return {\n      products: [],\n      totalPrice: 0\n    };\n  },\n\n  created() {\n    this.fetchProducts(); // this.fetchTotalPrice()\n  },\n\n  methods: {\n    fetchProducts() {\n      this.products = dummyData.products;\n    },\n\n    fetchTotalPrice() {\n      this.products.forEach(product => {\n        this.totalPrice += product.priceNumber * product.amount;\n      });\n      this.totalPrice += this.deliveryFee;\n    },\n\n    minusAmount(productId) {\n      this.products = this.products.map(product => {\n        if (product.id === productId && product.amount !== 0) {\n          return { ...product,\n            amount: product.amount - 1\n          };\n        }\n\n        return product;\n      });\n    },\n\n    plusAmount(productId) {\n      this.products = this.products.map(product => {\n        if (product.id === productId) {\n          return { ...product,\n            amount: product.amount + 1\n          };\n        }\n\n        return product;\n      });\n    },\n\n    removeP\n  },\n  computed: {\n    renewTotalPrice() {\n      this.totalPrice = 0;\n      this.products.forEach(product => {\n        this.totalPrice += product.amount * product.priceNumber;\n      });\n      this.totalPrice += this.deliveryFee;\n      return this.totalPrice;\n    }\n\n  },\n  filters: {\n    presentDeliveryFee(fee) {\n      if (fee === 0) {\n        return \"免費\";\n      }\n\n      return \"$\" + fee;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAyCA;AACA;AACA;AACA;EACAA,WACA;IACAC,OADA;IAEAC,aAFA;IAGAC,aAHA;IAIAC,eAJA;IAKAC,iBALA;IAMAC;EANA,CADA,EASA;IACAL,OADA;IAEAC,aAFA;IAGAC,aAHA;IAIAC,eAJA;IAKAC,iBALA;IAMAC;EANA,CATA;AADA;AAoBA;EACAC;IACAC;MACAC,YADA;MAEAC;IAFA;EADA,CADA;;EAOAC;IACA;MACAX,YADA;MAEAY;IAFA;EAIA,CAZA;;EAaAC;IACA,qBADA,CAEA;EACA,CAhBA;;EAiBAC;IACAC;MACA;IACA,CAHA;;IAIAC;MACA;QACA;MACA,CAFA;MAGA;IACA,CATA;;IAUAC;MACA;QACA;UACA,SACA,UADA;YAEAX;UAFA;QAIA;;QACA;MACA,CARA;IASA,CApBA;;IAqBAY;MACA;QACA;UACA,SACA,UADA;YAEAZ;UAFA;QAIA;;QACA;MACA,CARA;IASA,CA/BA;;IAgCAa;EAhCA,CAjBA;EAmDAC;IACAC;MACA;MACA;QACA;MACA,CAFA;MAGA;MACA;IACA;;EARA,CAnDA;EA6DAC;IACAC;MACA;QACA;MACA;;MACA;IACA;;EANA;AA7DA","names":["products","id","name","image","price","priceNumber","amount","props","deliveryFee","type","required","data","totalPrice","created","methods","fetchProducts","fetchTotalPrice","minusAmount","plusAmount","removeP","computed","renewTotalPrice","filters","presentDeliveryFee"],"sourceRoot":"src/components","sources":["ShoppingCart.vue"],"sourcesContent":["<template>\n  <div class=\"shopping-lists-wrapper\">\n    <div class=\"shopping-content\">\n      <p class=\"shopping-lists-title\">購物籃</p>\n      <ul class=\"shopping-lists\">\n        <li class=\"product\" v-for=\"product in products\" :key=\"product.id\">\n          <img :src=\"product.image\" alt=\"\" />\n          <div class=\"product-content d-flex flex-column\">\n            <span class=\"title\">{{ product.name }}</span>\n            <div class=\"amount-control\">\n              <div class=\"minus\" @click.stop.prevent=\"minusAmount(product.id)\">\n                －\n              </div>\n              <span class=\"amount\">{{ product.amount }}</span>\n              <div class=\"plus\" @click.stop.prevent=\"plusAmount(product.id)\">\n                ＋\n              </div>\n            </div>\n            <div class=\"price d-flex grid-row-between\">{{ product.price }}\n              <div class=\"cancel\">X</div>\n            </div>\n          </div>\n        </li>\n      </ul>\n      <div\n        class=\"price-outline d-flex justify-content-between align-items-center\"\n      >\n        運費\n        <div class=\"delivery-fee\">{{ deliveryFee | presentDeliveryFee }}</div>\n      </div>\n      <div\n        class=\"price-outline d-flex justify-content-between align-items-center\"\n      >\n        小計\n        <div class=\"total-amount\">${{ renewTotalPrice }}</div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n/*eslint-disable*/\nimport image1 from \"../assets/image/plant1.png\";\nimport image2 from \"../assets/image/plant2.png\";\nconst dummyData = {\n  products: [\n    {\n      id: 123,\n      name: \"斑葉姑婆芋\",\n      image: image1,\n      price: \"$2,580\",\n      priceNumber: 2580,\n      amount: 1,\n    },\n    {\n      id: 126,\n      name: \"凹突觀音蓮\",\n      image: image2,\n      price: \"$1,200\",\n      priceNumber: 1200,\n      amount: 1,\n    },\n  ],\n};\nexport default {\n  props: {\n    deliveryFee: {\n      type: Number,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      products: [],\n      totalPrice: 0,\n    };\n  },\n  created() {\n    this.fetchProducts();\n    // this.fetchTotalPrice()\n  },\n  methods: {\n    fetchProducts() {\n      this.products = dummyData.products;\n    },\n    fetchTotalPrice() {\n      this.products.forEach((product) => {\n        this.totalPrice += product.priceNumber * product.amount;\n      });\n      this.totalPrice += this.deliveryFee;\n    },\n    minusAmount(productId) {\n      this.products = this.products.map((product) => {\n        if (product.id === productId && product.amount !== 0) {\n          return {\n            ...product,\n            amount: product.amount - 1,\n          };\n        }\n        return product;\n      });\n    },\n    plusAmount(productId) {\n      this.products = this.products.map((product) => {\n        if (product.id === productId) {\n          return {\n            ...product,\n            amount: product.amount + 1,\n          };\n        }\n        return product;\n      });\n    },\n    removeP\n  },\n  computed: {\n    renewTotalPrice() {\n      this.totalPrice = 0;\n      this.products.forEach((product) => {\n        this.totalPrice += product.amount * product.priceNumber;\n      });\n      this.totalPrice += this.deliveryFee;\n      return this.totalPrice;\n    },\n  },\n  filters: {\n    presentDeliveryFee(fee) {\n      if (fee === 0) {\n        return \"免費\";\n      }\n      return \"$\" + fee;\n    },\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module"}